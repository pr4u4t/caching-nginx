#!/bin/bash

function script_dir
{
        SOURCE="${BASH_SOURCE[0]}"

        while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
                DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
                SOURCE="$(readlink "$SOURCE")"
                [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
        done
        DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
        echo $DIR
}

sdir="$( script_dir )"

if ! command -v ip &> /dev/null
then
    echo "command: ip could not be found"
    exit
fi

if ! command -v iptables &> /dev/null
then
    echo "command: iptables could not be found"
    exit
fi

[ -d "$sdir/../logs" ] || mkdir "$sdir/../logs" || { echo "Failed to create directory logs"; exit; }
[ -d "$sdir/../cache/l1_cache" ] || mkdir -p "$sdir/../cache/l1_cache" || { echo "Failed to create directory: cache/l1_cache"; exit; }
[ -d "$sdir/../cache/l2_cache" ] || mkdir -p "$sdir/../cache/l2_cache" || { echo "Failed to create directory: cache/l1_cache"; exit; }

echo "1" > /proc/sys/net/ipv4/ip_forward

ip rule add fwmark 1 lookup 100 || { echo "Failed to add fwmark"; exit; }

ip route add local 0.0.0.0/0 dev lo table 100 || { echo "Failed to add local route"; exit; }

iptables -t mangle -A PREROUTING -p tcp -s 192.168.74.10/32 --sport 2598 -j MARK --set-xmark 0x1/0xffffffff || { echo "Failed to add rule for port 2598"; exit; }

iptables -t mangle -A PREROUTING -p tcp -s 192.168.74.10/32 --sport 443  -j MARK --set-xmark 0x1/0xffffffff || { echo "Failed to add rule for port 443"; exit; }
